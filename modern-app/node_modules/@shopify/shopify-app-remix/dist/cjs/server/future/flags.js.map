{"version":3,"file":"flags.js","sources":["../../../../../src/server/future/flags.ts"],"sourcesContent":["import type {\n  ConfigParams,\n  Shopify,\n  ShopifyRestResources,\n} from '@shopify/shopify-api';\n\nimport {AppConfig} from '../config-types';\n\n// When adding new flags, you should also add them to the `TEST_FUTURE_FLAGS` object in `test-config.ts` to ensure that\n// it doesn't cause regressions.\nexport interface FutureFlags {\n  /**\n   * When enabled, embedded apps will fetch access tokens via [token exchange](https://shopify.dev/docs/apps/auth/get-access-tokens/token-exchange).\n   * This assumes the app has scopes declared for [Shopify managing installation](https://shopify.dev/docs/apps/auth/installation#shopify-managed-installation).\n   *\n   * Learn more about this [new embedded app auth strategy](https://shopify.dev/docs/api/shopify-app-remix#embedded-auth-strategy).\n   *\n   * @default false\n   */\n  unstable_newEmbeddedAuthStrategy?: boolean;\n\n  /**\n   * When enabled, methods for interacting with the admin REST API will not be returned.\n   *\n   * This affects:\n   *\n   * * `authenticate.admin(request)`\n   * * `authenticate.webhook(request)`\n   * * `authenticate.flow(request)`\n   * * `authenticate.appProxy(request)`\n   * * `authenticate.fulfillmentService(request)`\n   * * `unauthenticated.admin(shop)`\n   *\n   * In a future release we will remove REST from the package completely.\n   *\n   * Please see: [https://www.shopify.com/ca/partners/blog/all-in-on-graphql](https://www.shopify.com/ca/partners/blog/all-in-on-graphql)\n   *\n   * @default false\n   */\n  removeRest?: boolean;\n}\n\n// When adding new flags, use this format:\n// apiFutureFlag: Future extends FutureFlags ? Future['remixFutureFlag'] : false;\nexport interface ApiFutureFlags<_Future extends FutureFlagOptions> {\n  // We're currently hardcoding this flag to true in our settings, so we should propagate it here\n  lineItemBilling: true;\n  unstable_managedPricingSupport: true;\n}\n\nexport type ApiConfigWithFutureFlags<Future extends FutureFlagOptions> =\n  ConfigParams<ShopifyRestResources, ApiFutureFlags<Future>>;\n\nexport type FutureFlagOptions = FutureFlags | undefined;\n\nexport type FeatureEnabled<\n  Future extends FutureFlagOptions,\n  Flag extends keyof FutureFlags,\n> = Future extends FutureFlags\n  ? Future[Flag] extends true\n    ? true\n    : false\n  : false;\n\nexport function logDisabledFutureFlags(\n  config: AppConfig,\n  logger: Shopify['logger'],\n) {\n  const logFlag = (flag: string, message: string) =>\n    logger.info(`Future flag ${flag} is disabled.\\n\\n  ${message}\\n`);\n\n  if (!config.future.unstable_newEmbeddedAuthStrategy) {\n    logFlag(\n      'unstable_newEmbeddedAuthStrategy',\n      'Enable this to use OAuth token exchange instead of auth code to generate API access tokens.' +\n        '\\n  Your app must be using Shopify managed install: https://shopify.dev/docs/apps/auth/installation',\n    );\n  }\n}\n"],"names":[],"mappings":";;AAgEM,SAAU,sBAAsB,CACpC,MAAiB,EACjB,MAAyB,EAAA;AAEzB,IAAA,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,OAAe,KAC5C,MAAM,CAAC,IAAI,CAAC,CAAA,YAAA,EAAe,IAAI,sBAAsB,OAAO,CAAA,EAAA,CAAI,CAAC;AAEnE,IAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gCAAgC,EAAE;QACnD,OAAO,CACL,kCAAkC,EAClC,6FAA6F;AAC3F,YAAA,qGAAqG,CACxG;IACH;AACF;;;;"}
{"version":3,"file":"factory.js","sources":["../../../../../../src/server/unauthenticated/admin/factory.ts"],"sourcesContent":["import {ShopifyRestResources} from '@shopify/shopify-api';\n\nimport {AppConfigArg} from '../../config-types';\nimport {createOrLoadOfflineSession} from '../../authenticate/helpers/create-or-load-offline-session';\nimport {SessionNotFoundError} from '../../errors';\nimport {BasicParams} from '../../types';\nimport {adminClientFactory} from '../../clients/admin';\n\nimport {UnauthenticatedAdminContext} from './types';\n\nexport function unauthenticatedAdminContextFactory<\n  ConfigArg extends AppConfigArg,\n  Resources extends ShopifyRestResources,\n>(params: BasicParams) {\n  return async (\n    shop: string,\n  ): Promise<UnauthenticatedAdminContext<ConfigArg, Resources>> => {\n    const session = await createOrLoadOfflineSession(shop, params);\n\n    if (!session) {\n      throw new SessionNotFoundError(\n        `Could not find a session for shop ${shop} when creating unauthenticated admin context`,\n      );\n    }\n\n    return {\n      session,\n      admin: adminClientFactory<ConfigArg, Resources>({params, session}),\n    };\n  };\n}\n"],"names":["createOrLoadOfflineSession","SessionNotFoundError","adminClientFactory"],"mappings":";;;;;;AAUM,SAAU,kCAAkC,CAGhD,MAAmB,EAAA;AACnB,IAAA,OAAO,OACL,IAAY,KACkD;QAC9D,MAAM,OAAO,GAAG,MAAMA,qDAA0B,CAAC,IAAI,EAAE,MAAM,CAAC;QAE9D,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,MAAM,IAAIC,2BAAoB,CAC5B,qCAAqC,IAAI,CAAA,4CAAA,CAA8C,CACxF;QACH;QAEA,OAAO;YACL,OAAO;YACP,KAAK,EAAEC,0BAAkB,CAAuB,EAAC,MAAM,EAAE,OAAO,EAAC,CAAC;SACnE;AACH,IAAA,CAAC;AACH;;;;"}